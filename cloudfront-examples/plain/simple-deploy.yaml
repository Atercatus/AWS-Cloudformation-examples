AWSTemplateFormatVersion: 2010-09-09
Metadata:
  License: Apache-2.0
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  BucketName:
    Description: Bucket name
    Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        ErrorDocument: 404.html
        IndexDocument: index.html

  # Configure Access to CF
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket

  # Configure the bucket as a CF Origin
  ReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub ${S3Bucket.Arn}/*
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  # Configure CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 31536000
          MinTTL: 0
          TargetOriginId: s3origin
          ViewerProtocolPolicy: "allow-all"

        # This DefaultRootObject configuration is not enough
        DefaultRootObject: index.html
        Enabled: false
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: s3origin
            # If the origin is a custom origin or an S3 bucket that is configured as a website endpoint,
            # use the CustomOriginConfig element instead.
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        PriceClass: PriceClass_All

Outputs:
  Bucket:
    Description: S3 Bucket Name
    Value: !Ref S3Bucket
  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
  Domain:
    Description: Cloudfront Domain
    Value: !GetAtt CloudFrontDistribution.DomainName
