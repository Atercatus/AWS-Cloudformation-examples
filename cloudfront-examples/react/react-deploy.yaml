AWSTemplateFormatVersion: 2010-09-09
Metadata:
  License: Apache-2.0
Parameters:
  # DomainName:
  #   Description: Domain name of website
  #   Type: String
  EnvironmentName:
    Description: An environment name that is prefixed to resource name
    Type: String
  BucketName:
    Description: Bucket Name
    Type: String
Resources:
  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub ${AWS::StackName}-logs

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      # AccessControl: PublicRead
      BucketName: !Ref BucketName
      LoggingConfiguration:
        DestinationBucketName: !Ref S3BucketLogs
        LogFilePrefix: cdn/
      WebsiteConfiguration:
        ErrorDocument: 404.html
        IndexDocument: index.html

  # Configure the bucket as a CF origin
  ReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub ${S3Bucket.Arn}/*
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
              # "*"

  # Configure Access to CF
  # An origin access identity is a special CloudFront user
  # that you can associate with Amazon S3 origins,
  # so that you can secure all
  # or just some of your Amazon S3 content.
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket

  # Configure CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        # Aliases:
        #   - !Ref DomainName
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 0
          SmoothStreaming: false
          # The value of ID for the origin that you want CloudFront
          # to route requests to when they match this cache behavior.
          TargetOriginId: !Sub S3-${AWS::StackName}-root
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Sub S3-${AWS::StackName}-root
            # A complex type that contains information about the Amazon S3 origin.
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}

            # CustomOriginConfig:
            #   HTTPPort: 80
            #   HTTPSPort: 443
            #   OriginKeepaliveTimeout: 5
            #   OriginProtocolPolicy: https-only
            #   OriginReadTimeout: 30

            # OriginSSLProtocols:
            #   - TLSv1
            #   - TLSv1.1
            #   - TLSv1.2
        PriceClass: PriceClass_All
        # ViewerCertificate:
        #   AcmCertificateArn: !Ref CertificateManagerCertificate
        #   MinimumProtocolVersion: TLSv1.1_2016
        #   SslSupportMethod: sni-only
  # Route53

Outputs:
  Bucket:
    Description: S3 Bucket Name
    Value: !Ref S3Bucket
  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
  Domain:
    Description: CloudFront Domain
    Value: !GetAtt CloudFrontDistribution.DomainName
